name: Install HRMS 
on:
  workflow_dispatch:
    inputs:
      product:
        required: true
        description: Product
        default: pdt  
jobs:
  deploy:
    name: Configure hrms instance
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::734522607489:role/github-action
        aws-region: ap-south-1

    - name: Configure Instance
      run: |
        export pubIP=$(aws ec2 describe-instances   --filters "Name=tag:Name,Values=test-company-hrms-ec2"   --query "Reservations[*].Instances[*].PublicIpAddress"   --output text)
        echo "Public IP="$pubIP

    - name: Build & Deploy
      env:
          PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          HOSTNAME: $pubIP
          USER_NAME: ubuntu
    
      run: |
        echo "$SSH_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            # Now we have got the access of EC2 and we will start the deploy .
            # Set container name
            CONTAINER_NAME="c1"
            
            # Set frappe user password
            FRAPPE_PASSWORD="frappe"
            
            # Set old and new server names
            OLD_SERVER_NAME="127.0.0.1"
            NEW_SERVER_NAME=${HOSTNAME}   # Change this to your desired new server name
            
            # Pull Docker image
            sudo docker pull indictrans/erpnext_setups:erpv15
            
            # Create and run container
            sudo docker run -d -it --name $CONTAINER_NAME -p 80:80 indictrans/erpnext_setups:erpv15
            
            # Check if the nginx.conf file exists
            if sudo docker exec $CONTAINER_NAME bash -c '[ -f /home/frappe/webapp/frappe-bench/config/nginx.conf ]'; then
                # Update Nginx configuration with new server name
                sudo docker exec $CONTAINER_NAME bash -c "\
                  sed -i 's/server_name $OLD_SERVER_NAME;/server_name $NEW_SERVER_NAME;/' /home/frappe/webapp/frappe-bench/config/nginx.conf && \
                  echo \"$FRAPPE_PASSWORD\" | sudo -S service nginx restart && \
                  cd /home/frappe/webapp/frappe-bench && \
                  source ../bin/activate && \
                  echo \"$FRAPPE_PASSWORD\" | sudo -S service mariadb start && \
                  echo \"$FRAPPE_PASSWORD\" | sudo -S service supervisor start && \
                  echo \"$FRAPPE_PASSWORD\" | sudo -S supervisorctl restart all"
            else
                echo "Error: nginx.conf file not found in the specified path."
            fi
            '  


      